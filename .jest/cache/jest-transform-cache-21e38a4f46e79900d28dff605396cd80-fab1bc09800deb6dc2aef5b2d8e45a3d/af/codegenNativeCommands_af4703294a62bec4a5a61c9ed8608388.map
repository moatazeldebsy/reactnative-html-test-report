{"version":3,"names":["require","dispatchCommand","codegenNativeCommands","options","commandObj","supportedCommands","forEach","command","ref","args"],"sources":["codegenNativeCommands.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\ntype Options<T = string> = $ReadOnly<{|\n  supportedCommands: $ReadOnlyArray<T>,\n|}>;\n\nfunction codegenNativeCommands<T: interface {}>(options: Options<$Keys<T>>): T {\n  const commandObj: {[$Keys<T>]: (...$ReadOnlyArray<mixed>) => void} = {};\n\n  options.supportedCommands.forEach(command => {\n    commandObj[command] = (ref, ...args) => {\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj: any): T);\n}\n\nexport default codegenNativeCommands;\n"],"mappings":";;;;AAUA,eAA0BA,OAAO,CAAC,8BAA8B,CAAC;EAA1DC,eAAe,YAAfA,eAAe;AAMtB,SAASC,qBAAqB,CAAkBC,OAA0B,EAAK;EAC7E,IAAMC,UAA4D,GAAG,CAAC,CAAC;EAEvED,OAAO,CAACE,iBAAiB,CAACC,OAAO,CAAC,UAAAC,OAAO,EAAI;IAC3CH,UAAU,CAACG,OAAO,CAAC,GAAG,UAACC,GAAG,EAAc;MAAA,kCAATC,IAAI;QAAJA,IAAI;MAAA;MACjCR,eAAe,CAACO,GAAG,EAAED,OAAO,EAAEE,IAAI,CAAC;IACrC,CAAC;EACH,CAAC,CAAC;EAEF,OAASL,UAAU;AACrB;AAAC,eAEcF,qBAAqB;AAAA"}