a0ffd3a07f252f782071cc9002fd1d5f
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("../TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = TurboModuleRegistry.get('NativeAnimatedTurboModule');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5IiwiZ2V0Il0sInNvdXJjZXMiOlsiTmF0aXZlQW5pbWF0ZWRUdXJib01vZHVsZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7VHVyYm9Nb2R1bGV9IGZyb20gJy4uL1R1cmJvTW9kdWxlL1JDVEV4cG9ydCc7XG5cbmltcG9ydCAqIGFzIFR1cmJvTW9kdWxlUmVnaXN0cnkgZnJvbSAnLi4vVHVyYm9Nb2R1bGUvVHVyYm9Nb2R1bGVSZWdpc3RyeSc7XG5cbnR5cGUgRW5kUmVzdWx0ID0ge2ZpbmlzaGVkOiBib29sZWFuLCAuLi59O1xudHlwZSBFbmRDYWxsYmFjayA9IChyZXN1bHQ6IEVuZFJlc3VsdCkgPT4gdm9pZDtcbnR5cGUgU2F2ZVZhbHVlQ2FsbGJhY2sgPSAodmFsdWU6IG51bWJlcikgPT4gdm9pZDtcblxuZXhwb3J0IHR5cGUgRXZlbnRNYXBwaW5nID0ge3xcbiAgbmF0aXZlRXZlbnRQYXRoOiBBcnJheTxzdHJpbmc+LFxuICBhbmltYXRlZFZhbHVlVGFnOiA/bnVtYmVyLFxufH07XG5cbi8vIFRoZSBjb25maWcgaGFzIGRpZmZlcmVudCBrZXlzIGRlcGVuZGluZyBvbiB0aGUgdHlwZSBvZiB0aGUgTm9kZVxuLy8gVE9ETyhUNTQ4OTY4ODgpOiBNYWtlIHRoZXNlIHR5cGVzIHN0cmljdFxuZXhwb3J0IHR5cGUgQW5pbWF0ZWROb2RlQ29uZmlnID0gT2JqZWN0O1xuZXhwb3J0IHR5cGUgQW5pbWF0aW5nTm9kZUNvbmZpZyA9IE9iamVjdDtcblxuZXhwb3J0IGludGVyZmFjZSBTcGVjIGV4dGVuZHMgVHVyYm9Nb2R1bGUge1xuICArc3RhcnRPcGVyYXRpb25CYXRjaDogKCkgPT4gdm9pZDtcbiAgK2ZpbmlzaE9wZXJhdGlvbkJhdGNoOiAoKSA9PiB2b2lkO1xuICArY3JlYXRlQW5pbWF0ZWROb2RlOiAodGFnOiBudW1iZXIsIGNvbmZpZzogQW5pbWF0ZWROb2RlQ29uZmlnKSA9PiB2b2lkO1xuICArdXBkYXRlQW5pbWF0ZWROb2RlQ29uZmlnPzogKHRhZzogbnVtYmVyLCBjb25maWc6IEFuaW1hdGVkTm9kZUNvbmZpZykgPT4gdm9pZDtcbiAgK2dldFZhbHVlOiAodGFnOiBudW1iZXIsIHNhdmVWYWx1ZUNhbGxiYWNrOiBTYXZlVmFsdWVDYWxsYmFjaykgPT4gdm9pZDtcbiAgK3N0YXJ0TGlzdGVuaW5nVG9BbmltYXRlZE5vZGVWYWx1ZTogKHRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArc3RvcExpc3RlbmluZ1RvQW5pbWF0ZWROb2RlVmFsdWU6ICh0YWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Nvbm5lY3RBbmltYXRlZE5vZGVzOiAocGFyZW50VGFnOiBudW1iZXIsIGNoaWxkVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtkaXNjb25uZWN0QW5pbWF0ZWROb2RlczogKHBhcmVudFRhZzogbnVtYmVyLCBjaGlsZFRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArc3RhcnRBbmltYXRpbmdOb2RlOiAoXG4gICAgYW5pbWF0aW9uSWQ6IG51bWJlcixcbiAgICBub2RlVGFnOiBudW1iZXIsXG4gICAgY29uZmlnOiBBbmltYXRpbmdOb2RlQ29uZmlnLFxuICAgIGVuZENhbGxiYWNrOiBFbmRDYWxsYmFjayxcbiAgKSA9PiB2b2lkO1xuICArc3RvcEFuaW1hdGlvbjogKGFuaW1hdGlvbklkOiBudW1iZXIpID0+IHZvaWQ7XG4gICtzZXRBbmltYXRlZE5vZGVWYWx1ZTogKG5vZGVUYWc6IG51bWJlciwgdmFsdWU6IG51bWJlcikgPT4gdm9pZDtcbiAgK3NldEFuaW1hdGVkTm9kZU9mZnNldDogKG5vZGVUYWc6IG51bWJlciwgb2Zmc2V0OiBudW1iZXIpID0+IHZvaWQ7XG4gICtmbGF0dGVuQW5pbWF0ZWROb2RlT2Zmc2V0OiAobm9kZVRhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArZXh0cmFjdEFuaW1hdGVkTm9kZU9mZnNldDogKG5vZGVUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Nvbm5lY3RBbmltYXRlZE5vZGVUb1ZpZXc6IChub2RlVGFnOiBudW1iZXIsIHZpZXdUYWc6IG51bWJlcikgPT4gdm9pZDtcbiAgK2Rpc2Nvbm5lY3RBbmltYXRlZE5vZGVGcm9tVmlldzogKG5vZGVUYWc6IG51bWJlciwgdmlld1RhZzogbnVtYmVyKSA9PiB2b2lkO1xuICArcmVzdG9yZURlZmF1bHRWYWx1ZXM6IChub2RlVGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICtkcm9wQW5pbWF0ZWROb2RlOiAodGFnOiBudW1iZXIpID0+IHZvaWQ7XG4gICthZGRBbmltYXRlZEV2ZW50VG9WaWV3OiAoXG4gICAgdmlld1RhZzogbnVtYmVyLFxuICAgIGV2ZW50TmFtZTogc3RyaW5nLFxuICAgIGV2ZW50TWFwcGluZzogRXZlbnRNYXBwaW5nLFxuICApID0+IHZvaWQ7XG4gICtyZW1vdmVBbmltYXRlZEV2ZW50RnJvbVZpZXc6IChcbiAgICB2aWV3VGFnOiBudW1iZXIsXG4gICAgZXZlbnROYW1lOiBzdHJpbmcsXG4gICAgYW5pbWF0ZWROb2RlVGFnOiBudW1iZXIsXG4gICkgPT4gdm9pZDtcblxuICAvLyBFdmVudHNcbiAgK2FkZExpc3RlbmVyOiAoZXZlbnROYW1lOiBzdHJpbmcpID0+IHZvaWQ7XG4gICtyZW1vdmVMaXN0ZW5lcnM6IChjb3VudDogbnVtYmVyKSA9PiB2b2lkO1xuXG4gIC8vIEFsbCBvZiB0aGUgYWJvdmUgaW4gYSBiYXRjaGVkIG1vZGVcbiAgK3F1ZXVlQW5kRXhlY3V0ZUJhdGNoZWRPcGVyYXRpb25zPzogKG9wZXJhdGlvbnNBbmRBcmdzOiBBcnJheTxhbnk+KSA9PiB2b2lkO1xufVxuXG5leHBvcnQgZGVmYXVsdCAoVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXQ8U3BlYz4oXG4gICdOYXRpdmVBbmltYXRlZFR1cmJvTW9kdWxlJyxcbik6ID9TcGVjKTtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQVlBO0FBQTBFO0FBQUE7QUFBQSxlQTREMURBLG1CQUFtQixDQUFDQyxHQUFHLENBQ3JDLDJCQUEyQixDQUM1QjtBQUFBIn0=