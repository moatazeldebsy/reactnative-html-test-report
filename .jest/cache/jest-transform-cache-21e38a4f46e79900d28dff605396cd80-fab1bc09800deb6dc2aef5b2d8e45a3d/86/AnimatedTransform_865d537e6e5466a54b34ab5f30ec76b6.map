{"version":3,"names":["AnimatedTransform","transforms","_transforms","platformConfig","forEach","transform","key","value","AnimatedNode","__makeNative","_get","animatedNode","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","NativeAnimatedHelper","transformDataType","validateTransform","getter","map","result","Array","isArray","element","Object","entries","nestedKey","nestedValue","AnimatedWithChildren"],"sources":["AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getValue());\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n\n  _get(getter: AnimatedNode => any): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = getter(value);\n        } else if (Array.isArray(value)) {\n          result[key] = value.map(element => {\n            if (element instanceof AnimatedNode) {\n              return getter(element);\n            } else {\n              return element;\n            }\n          });\n        } else if (typeof value === 'object') {\n          result[key] = {};\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\n            if (nestedValue instanceof AnimatedNode) {\n              result[key][nestedKey] = getter(nestedValue);\n            } else {\n              result[key][nestedKey] = nestedValue;\n            }\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":"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"}