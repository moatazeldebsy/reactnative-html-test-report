{"version":3,"names":["Text","React","forwardRef","props","forwardedRef","accessible","accessibilityLabel","accessibilityRole","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","role","suppressHighlighting","restProps","useState","isHighlighted","setHighlighted","_accessibilityState","busy","accessibilityState","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","isPressable","initialized","useLazyInitialization","config","useMemo","pressRectOffset","event","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","usePressability","eventHandlersForText","onClick","selectionColor","processColor","style","flattenStyle","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","StyleSheet","compose","textAlignVertical","verticalAlignToTextAlignVerticalMap","__DEV__","PressabilityDebug","isEnabled","color","numberOfLines","console","error","hasTextAncestor","useContext","TextAncestor","_accessible","Platform","select","ios","default","flattenedStyle","fontWeight","toString","_hasOnPressOrOnLongPress","getAccessibilityRoleFromRole","OS","displayName","propTypes","require","TextPropTypes","newValue","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {getAccessibilityRoleFromRole} from '../Utilities/AcessibilityMapping';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport {type TextProps} from './TextProps';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    accessibilityLabel,\n    accessibilityRole,\n    allowFontScaling,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    ellipsizeMode,\n    id,\n    nativeID,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    role,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  const _accessibilityState = {\n    busy: ariaBusy ?? props.accessibilityState?.busy,\n    checked: ariaChecked ?? props.accessibilityState?.checked,\n    disabled: ariaDisabled ?? props.accessibilityState?.disabled,\n    expanded: ariaExpanded ?? props.accessibilityState?.expanded,\n    selected: ariaSelected ?? props.accessibilityState?.selected,\n  };\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : _accessibilityState?.disabled;\n\n  const nativeTextAccessibilityState =\n    _disabled !== _accessibilityState?.disabled\n      ? {..._accessibilityState, disabled: _disabled}\n      : _accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              setHighlighted(!suppressHighlighting);\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = flattenStyle(restProps.style);\n\n  let _selectable = restProps.selectable;\n  if (style?.userSelect != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n  }\n\n  if (style?.verticalAlign != null) {\n    style = StyleSheet.compose(style, {\n      textAlignVertical:\n        verticalAlignToTextAlignVerticalMap[style.verticalAlign],\n    });\n  }\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = StyleSheet.compose(restProps.style, {\n        color: 'magenta',\n      });\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  let flattenedStyle = flattenStyle(style);\n\n  if (typeof flattenedStyle?.fontWeight === 'number') {\n    flattenedStyle.fontWeight = flattenedStyle?.fontWeight.toString();\n  }\n\n  const _hasOnPressOrOnLongPress =\n    props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      accessibilityState={_accessibilityState}\n      {...eventHandlersForText}\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n      accessibilityRole={\n        role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n      }\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      selectable={_selectable}\n      nativeID={id ?? nativeID}\n      numberOfLines={numberOfLines}\n      selectionColor={selectionColor}\n      style={flattenedStyle}\n      ref={forwardedRef}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        disabled={_disabled}\n        selectable={_selectable}\n        accessible={\n          accessible == null && Platform.OS === 'android'\n            ? _hasOnPressOrOnLongPress\n            : _accessible\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        accessibilityState={nativeTextAccessibilityState}\n        accessibilityRole={\n          role ? getAccessibilityRoleFromRole(role) : accessibilityRole\n        }\n        allowFontScaling={allowFontScaling !== false}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        nativeID={id ?? nativeID}\n        numberOfLines={numberOfLines}\n        selectionColor={selectionColor}\n        style={flattenedStyle}\n        ref={forwardedRef}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n"],"mappings":"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"}